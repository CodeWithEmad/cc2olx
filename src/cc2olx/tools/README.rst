Tools
######

.. _video_upload_tool:

Video Upload Tool
-----------------

The video upload tool uploads video files to edX's video encoding pipeline.
It also generates an output CSV that can be used as input to the video xBlock conversion tool.

Input
-----
The tool takes as positional command line arguments a ``course-id``, a ``directory``, and an ``input-csv``.
The tool also optionally takes as a keyword argument an ``--output-csv``.

The ``course-id`` argument is the ID of the course as it appears in Studio. For example, ``course-v1:edX+111222+111222``.

The ``directory`` argument is a directory containing video files that will be uploaded to edX's video encoding pipeline.
The currently supported formats for the videos are ``mp4`` and ``mov``, which are the files supported by the edX video encoding pipeline.
Note that files of other types will be ignored by the tool.

The ``input-csv`` argument is a file that is meant to establish a relationship between a particular video, its externally hosted URL, and the edX video ID that is generated by the video encoding pipeline when the video is uploaded.

The ``--output-csv`` argument is a path to where the output CSV file should be saved. This argument is optional. If the argument is not supplied, the default is ``None``. If the argument is not supplied, then the file will be saved to the same directory as the input file as specified by the ``input-csv`` command line argument, and the name of the CSV fill will be the name of the original CSV file supplied as a command line argument with "upload-results" appended to the end of the name, i.e. ``<original-filename>-upload-results.csv``.

In order to for this tool to run successfully, the following must be true of the CSV.

* Each row in the file should describe a single video that appears in the directory supplied as a command line argument.
* The CSV should contain a header row, labeling each column.
* The first column should be labeled "Relative File Path". The values for this column should be the paths to the video files relative to the directory supplied as a command line argument. For example, if the directory is ``/Users/example/workspaces/videos`` and the video is located at ``/Users/example/workspaces/videos/unit_1/video_1.mp4``, the value of this cell should be ``unit_1/video_1.mp4``.
* The CSV should contain the columns "External Video Link" and "Youtube ID". They can appear anywhere in the file as long as "Relative File Path" remains the first column.
* Empty values should be represented as empty cells. Do not use "NONE", "N/A", etc.

Output
------
The tool will generate a CSV file. If the optional command line argument ``--output-csv`` is supplied, then the output CSV will be saved to that path. Otherwise, if the command line argument is not supplied, then the file will be saved to the same directory as the input file as specified by the ``input-csv`` command line argument, and the name of the CSV fill will be the name of the original CSV file supplied as a command line argument with "upload-results" appended to the end of the name, i.e. ``<original-filename>-upload-results.csv``.

A new column, "Edx Id", which represents the edX Video ID for each video, will be appended to the end of the file.
Otherwise, the file is identical to the file supplied as a command line argument.

Logs
----
The tool will log to the console any errors that are encountered during execution.

You can redirect the output to a file for later inspection.::

    python src/cc2olx/tools/video_upload.py course-v1:edX+111222+111222 /Users/example/workspaces/videos /Users/example/workspaces/video-data.csv > logs.txt

.. _authentication:
Authentication
--------------
The video upload tool makes calls to a Studio API. In order to make authenticated calls to Studio to generate signed URLs for uploading videos, you will need to supply valid credentials.

If you are an edX staff user, you can use the client credentials associated with a cc2olx oAuth2 application registered in the desired environment. If you are not an edX staff user, you will have to go through the process for generating a client ID and client secret. You can use the `instructions <https://course-catalog-api-guide.readthedocs.io/en/latest/authentication/#getting-a-client-id-and-client-secret
/>`_ for generating credentials for using the edX Course Catalog API.

You should export these credentials into your environment in order for the tool to work. The client ID and client secret should have the names ``CC2OLX_CLIENT`` and ``CC2OLX_SECRET``, respectively.

We have decided not to support supplying credentials via command line arguments to avoid exposing secrets in clear text.

Use
---
The video upload tool is a command-line Python 3 program.

In order to use this tool, please follow the instructions described in :ref:`authentication`.

Once these are done, you can run the tool as follows::

    python src/cc2olx/tools/video_upload.py course-v1:edX+111222+111222 /Users/example/workspaces/videos /Users/example/workspaces/video-data.csv

Or, if you would like to specify the path to the output CSV file::
    python src/cc2olx/tools/video_upload.py course-v1:edX+111222+111222 /Users/example/workspaces/videos /Users/example/workspaces/video-data.csv --output-csv /Users/example/workspaces/video-data-output.csv


import io
import tarfile
import xml.dom.minidom

def olx_xml(normalized):
    impl = xml.dom.minidom.getDOMImplementation()
    doc = impl.createDocument(None, "course", None)
    xcourse = doc.documentElement
    xcourse.setAttribute("org", "hack-xxiv")
    xcourse.setAttribute("course", "Some_cc_Course")
    xcourse.setAttribute("name", "Some_cc_Course")
    xcourse.appendChild(doc.createComment(" Generated by cc2olx "))
    tags = "chapter sequential vertical".split()
    _add_olx_nodes(doc, xcourse, normalized['children'], tags)
    return doc.toprettyxml()

def _add_olx_nodes(doc, elt, data, tags):
    leaf = False
    if not tags:
        tags = ["html"]
        leaf = True
    for dd in data:
        child = doc.createElement(tags[0])
        if "title" in dd:
            child.setAttribute("display_name", dd["title"])
        if leaf:
            txt = doc.createTextNode("<p>This is some content</p>")
            child.appendChild(txt)
        elt.appendChild(child)
        if "children" in dd:
            _add_olx_nodes(doc, child, dd["children"], tags[1:])

def onefile_tar_gz(filetgz, contents, string_name):
    data = 'hello, world!'

    tarinfo = tarfile.TarInfo(string_name)
    tarinfo.size = len(contents)

    with tarfile.open(filetgz, 'w:gz') as tgz:
        tgz.addfile(tarinfo, io.BytesIO(contents))
